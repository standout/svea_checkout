=begin
#Svea Checkout API

#Svea Checkout API

OpenAPI spec version: v1
Contact: support-webpay@sveaekonomi.se
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for SveaCheckout::OrdersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrdersApi' do
  before do
    # run before each test
    @instance = SveaCheckout::OrdersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrdersApi' do
    it 'should create an instance of OrdersApi' do
      expect(@instance).to be_instance_of(SveaCheckout::OrdersApi)
    end
  end

  # unit tests for orders_create_order
  # This request creates a new order and returns the checkout to the webshop.    You can add preset values to the call, as well. These values will prefill the identification in the checkout. If a preset value has IsReadOnly, the customer will not be able to modify the value.    @@include(\&quot;minor-currency.md\&quot;)
  # HTTP status code 201 indicates success, everything else indicates a failure.
  # @param cmd Object as JSON containing MerchantSettings and Cart-information.
  # @param [Hash] opts the optional parameters
  # @return [Data]
  describe 'orders_create_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orders_get_order
  # This request returns a data structure that contains all information about the order and what is needed for the GUI.
  # HTTP status code 200 indicates success, everything else indicates a failure.
  # @param id Checkoutorderid of the specified order.
  # @param [Hash] opts the optional parameters
  # @return [Data]
  describe 'orders_get_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orders_update_order_post
  # This request replaces the order rows of the specified order with the new appended in the call and sets the MerchantData on the order to the provided value.         ///   @@include(\&quot;minor-currency.md\&quot;)
  # HTTP status code 200 indicates success, everything else indicates a failure.
  # @param id Checkoutorderid of the specified order.
  # @param data Contains the order rows that will be set to the specified order, as well as MerchantData.
  # @param [Hash] opts the optional parameters
  # @return [Data]
  describe 'orders_update_order_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for orders_update_order_put
  # This request replaces the order rows of the specified order with the new appended in the call and sets the MerchantData on the order to the provided value.   @@include(\&quot;minor-currency.md\&quot;)
  # HTTP status code 200 indicates success, everything else indicates a failure.
  # @param id Checkoutorderid of the specified order.
  # @param data Contains the order rows that will be set to the specified order, as well as MerchantData.
  # @param [Hash] opts the optional parameters
  # @return [Data]
  describe 'orders_update_order_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
